int search(vector<int>& arr, int n, int k)
{
    // Write your code here.
    // Return the position of K in ARR else return -1.
    int s=0,e=n-1;
    int mid=s+(e-s)/2;
    while(s<e)
    {
if(arr[mid]>=arr[0])
{
    s=mid+1;
}
else
{
    e=mid;
}
mid=s+(e-s)/2;
    }
    int pivot=s;
    if(k>=arr[pivot]&&k<=arr[n-1])
    {
s=pivot;
e=n-1;
    }
    else
    {
        s=0;
        e=pivot-1;
    }
    mid=s+(e-s)/2;
    while(s<=e)
{
    if(arr[mid]==k)
    {
        return mid;
    }
    else if(k>arr[mid])
    {
        s=mid+1;
    }
    else
    {
        e=mid-1;
    }
    mid=s+(e-s)/2;
}
return -1;

}
